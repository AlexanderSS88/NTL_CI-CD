name: django testing and deploy


on:
  push:
    branches: 
      - main
  pull_request:
    branches:
      - main


jobs:
  tests:
    runs-on: ubuntu-latest
#    env:
#      POSTGRES_USER: postgres
#      POSTGRES_PASS: xxxxxxx
#      POSTGRES_HOST: localhost
#      POSTGRES_PORT: 5432
#      POSTGRES_DB: ci_cd
#      SECRET_KEY: django-insecure-nw^y+m^wmxza1asgk+)!ua2qx9)g+#v=6%76-9i8i(6eqiw94j
#      ALLOWED_HOSTS: 127.0.0.1,localhost,95.163.242.114
#
#    services:
#      postgres_main:
#        image: postgres:14
#        env:
#          POSTGRES_USER: ${{ env.POSTGRES_USER }}
#          POSTGRES_PASS: ${{ env.POSTGRES_PASS }}
#          POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
#          POSTGRES_PORT: ${{ env.POSTGRES_PORT }}
#          POSTGRES_DB: ${{ env.POSTGRES_DB }}
#          SECRET_KEY: ${{ env.SECRET_KEY }}
#          ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}

    steps: 
      - name: check on changes
        uses: actions/checkout@v2

      - name: install python3 
        uses: actions/setup-python@v2
        with:
          python-version: 3.10

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

       - name: linting
         run: flake8 main

      - name: run tests
        run: python3 manage.py test
#        env:
#          SECRET_KEY: ${{ env.SECRET_KEY }}
#          DEBUG: "0"
#          ALLOWED_HOSTS: ${{ env.ALLOWED_HOSTS }}
#          DB_ENGINE: django.db.backends.postgresql
#          DB_NAME: ${{ env.POSTGRES_DB }}
#          DB_USER: ${{ env.POSTGRES_USER }}
#          DB_PASSWORD: ${{ env.POSTGRES_PASS }}
#          DB_HOST: ${{ env.POSTGRES_HOST }}
#          DB_PORT: ${{ env.POSTGRES_PORT }}